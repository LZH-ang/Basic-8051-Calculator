C51 COMPILER V9.60.0.0   MAIN                                                              07/04/2022 22:47:29 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\KEILC51u5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          #include <STC89C5xRC.H>
   3          /*****************************************CONFIG****************************************/
   4          /*  
   5          **@SEG:P0
   6          **@BIT:P1.0-4
   7          **@KEY:P2
   8           */
   9          #define SEG P0
  10          #define KEY P2
  11          #define BIT P1
  12          #define KEYDE 123
  13          data const unsigned char seg[]  = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
  14          data unsigned int  result[] = {0,0,0};
  15          data const unsigned char key_num[] = {8,5,9,13,6,10,14,7,11,15};//键盘编码数组
  16          unsigned char keynum = 0,numbit = 0;                            //读取键盘键值,每次最多读四位
  17          bit keystate = 0;                                               //检测按键状态,控制数据只处理一次每次按下
  18          unsigned char OPER;                                             //+ - * /
  19          sbit DIG1 = P1^3;
  20          sbit DIG2 = P1^2;
  21          sbit DIG3 = P1^1;
  22          sbit DIG4 = P1^0;
  23          
  24          /***************************************FUNCTIONS*****************************************/
  25          
  26          void Display(unsigned int num);
  27          unsigned char Key(void);
  28          unsigned int CALC(void);
  29          void Delay(unsigned int x);
  30          
  31          /****************************************MAIN*********************************************/
  32          
  33          void main(void)
  34          {
  35   1        SEG = 0xff;
  36   1        BIT = 0xff;
  37   1        while(1)
  38   1        {
  39   2          keynum = Key();
  40   2          Display(CALC());
  41   2        }
  42   1      }
  43          
  44          /*****************************************************************************************/
  45          /****************************************CODE*********************************************/
  46          /*****************************************************************************************/
  47          
  48          void Display(unsigned int num)
  49          {
  50   1        static unsigned int numstate=10000;//检测数据变化,控制计算
  51   1        static unsigned char num1,num2,num3,num4;
  52   1        static bit flag = 1;
  53   1        if(numstate == num)flag = 0;else flag = 1;
  54   1        if(flag)
  55   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              07/04/2022 22:47:29 PAGE 2   

  56   2          num1 = num%10;
  57   2          num2 = num%100/10;
  58   2          num3 = num/100%10;
  59   2          num4 = num/1000;
  60   2        }
  61   1        numstate = num;
  62   1        //以上程序为了减少单片机运算量
  63   1        SEG = 0xff;BIT = 0xff;
  64   1        if(num4 < 10)
  65   1        {
  66   2          if(num4 != 0)
  67   2          {
  68   3            DIG1 = 0;SEG = seg[num1];DIG1 = 1;SEG = 0xff;
  69   3            DIG2 = 0;SEG = seg[num2];DIG2 = 1;SEG = 0xff;
  70   3            DIG3 = 0;SEG = seg[num3];DIG3 = 1;SEG = 0xff;
  71   3            DIG4 = 0;SEG = seg[num4];DIG4 = 1;SEG = 0xff;
  72   3          }
  73   2          else if(num3 != 0)
  74   2          {
  75   3            DIG1 = 0;SEG = seg[num1];DIG1 = 1;SEG = 0xff;
  76   3            DIG2 = 0;SEG = seg[num2];DIG2 = 1;SEG = 0xff;
  77   3            DIG3 = 0;SEG = seg[num3];DIG3 = 1;SEG = 0xff; 
  78   3          }
  79   2          else if(num2 != 0)
  80   2          {
  81   3            DIG1 = 0;SEG = seg[num1];DIG1 = 1;SEG = 0xff;
  82   3            DIG2 = 0;SEG = seg[num2];DIG2 = 1;SEG = 0xff;
  83   3          }
  84   2          else
  85   2          {
  86   3            DIG1 = 0;SEG = seg[num1];DIG1 = 1;SEG = 0xff;
  87   3          }
  88   2        }
  89   1        else//OVER VALUE
  90   1        {
  91   2          DIG1 = 0;SEG = 0xce;DIG1 = 1;SEG = 0xff;
  92   2          DIG2 = 0;SEG = 0x86;DIG2 = 1;SEG = 0xff;
  93   2          DIG3 = 0;SEG = 0xc1;DIG3 = 1;SEG = 0xff;
  94   2          DIG4 = 0;SEG = 0xc0;DIG4 = 1;SEG = 0xff;    
  95   2        }
  96   1      }
  97          
  98          unsigned char Key(void)//矩阵键盘扫描
  99          {
 100   1        static unsigned char i=0,m=0,n=0;
 101   1        //KEY = 0x0f;//0000 1111 触发后：~0xf1,~0xf2,~0xf4,~0xf8
 102   1        KEY = 0x0f;
 103   1        keystate = 0;
 104   1        if(KEY != 0x0f)
 105   1        {
 106   2          m = KEY;
 107   2          if(KEY == 0x0f)return KEYDE;//消除误触发，消抖
 108   2          KEY = 0xf0;//1111 0000 触发后：~0x1f,~0x2f,~0x4f,~0x8f
 109   2          if(KEY != 0xf0)n = KEY;
 110   2          keystate = 1;
 111   2        } 
 112   1        KEY = 0x0f;
 113   1        while(KEY != 0x0f);
 114   1        
 115   1        if(m == 14)i = 0;       //0000 1110 ~0xf1
 116   1        else if(m == 13)i = 1;  //0000 1101 ~0xf2
 117   1        else if(m == 11)i = 2;  //0000 1011 ~0xf4
C51 COMPILER V9.60.0.0   MAIN                                                              07/04/2022 22:47:29 PAGE 3   

 118   1        else if(m == 7)i = 3;   //0000 0111 ~0xf8
 119   1        
 120   1        if(n == 224)return i+ 0;        //1110 0000 ~0x1f       
 121   1        else if(n == 208)return i + 4;  //1101 0000 ~0x2f
 122   1        else if(n == 176)return i + 8;  //1011 0000 ~0x4f
 123   1        else if(n == 112)return i + 12; //0111 0000 ~0x8f 
 124   1        
 125   1        return KEYDE;
 126   1      }
 127          
 128          /******************************************************************************************
 129          **@计算器数据处理核心代码
 130          **@键盘布局
 131          ** | 15  11  7  3 |         | 9  8  7  + |
 132          ** | 14  10  6  2 |  ---->  | 6  5  4  - |
 133          ** | 13  9   5  1 |  ---->  | 3  2  1  * |
 134          ** | 12  8   4  0 |         | C  0  =  / |
 135          */
 136          unsigned int CALC(void)
 137          {
 138   1        static unsigned int num = 0;
 139   1      #if 0 //OLD CODE
                unsigned char i;
                if(keystate)//检测到按下
                { 
                  if(keynum == 12){result[0] = 0;result[1] = 0;result[2] = 0;num = 0;numbit = 0;OPER = 0;keystate = 0;} //
             - 'CLEAR'
                  else if(keynum == 3){OPER = 1;result[0] = num;num = 0;numbit = 0;keystate = 0;}                       // '+'
                  else if(keynum == 2){OPER = 2;result[0] = num;num = 0;numbit = 0;keystate = 0;}                       // '-'
                  else if(keynum == 1){OPER = 3;result[0] = num;num = 0;numbit = 0;keystate = 0;}                       // '*'
                  else if(keynum == 0){OPER = 4;result[0] = num;num = 0;numbit = 0;keystate = 0;}                       // '/'
                  else if(keynum == 4)      // '='
                  {   
                    result[1] = num;
                    if(OPER == 1){result[2] = result[0] + result[1];}
                    else if(OPER == 2){result[2] = result[0] - result[1];}
                    else if(OPER == 3){result[2] = result[0] * result[1];}
                    else if(OPER == 4){result[2] = result[0] / result[1];}
                    OPER = 0;numbit = 0;keystate = 0;
                    num = result[2];
                  }
                  else for(i=0;i<10;i++)    // '0-9'
                  {
                    if(key_num[i] == keynum)//查询键值,得到数字
                    {       
                      if(numbit <= 3){num = num*10+i;numbit++;}
                      keystate = 0;//复位
                      break;        
                    }   
                  }
                }
              #else
 169   1        if(keystate)//检测到按下
 170   1        { 
 171   2          switch(keynum)
 172   2          {
 173   3          /*'0'*/case  8:{if((numbit > 0)&&(numbit <= 3)){num = num*10+0;numbit++;}keystate = 0;}break;
 174   3          /*'1'*/case  5:{if(numbit <= 3){num = num*10+1;numbit++;}keystate = 0;}break;
 175   3          /*'2'*/case  9:{if(numbit <= 3){num = num*10+2;numbit++;}keystate = 0;}break;
 176   3          /*'3'*/case 13:{if(numbit <= 3){num = num*10+3;numbit++;}keystate = 0;}break;
 177   3          /*'4'*/case  6:{if(numbit <= 3){num = num*10+4;numbit++;}keystate = 0;}break;
 178   3          /*'5'*/case 10:{if(numbit <= 3){num = num*10+5;numbit++;}keystate = 0;}break;
C51 COMPILER V9.60.0.0   MAIN                                                              07/04/2022 22:47:29 PAGE 4   

 179   3          /*'6'*/case 14:{if(numbit <= 3){num = num*10+6;numbit++;}keystate = 0;}break;
 180   3          /*'7'*/case  7:{if(numbit <= 3){num = num*10+7;numbit++;}keystate = 0;}break;
 181   3          /*'8'*/case 11:{if(numbit <= 3){num = num*10+8;numbit++;}keystate = 0;}break;
 182   3          /*'9'*/case 15:{if(numbit <= 3){num = num*10+9;numbit++;}keystate = 0;}break;
 183   3          /*'C'*/case 12:{result[0] = 0;result[1] = 0;result[2] = 0;num = 0;numbit = 0;OPER = 0;keystate = 0;}brea
             -k;
 184   3          /*'+'*/case 3:{OPER = 1;result[0] = num;num = 0;numbit = 0;keystate = 0;}break;
 185   3          /*'-'*/case 2:{OPER = 2;result[0] = num;num = 0;numbit = 0;keystate = 0;}break;
 186   3          /*'*'*/case 1:{OPER = 3;result[0] = num;num = 0;numbit = 0;keystate = 0;}break;
 187   3          /*'/'*/case 0:{OPER = 4;result[0] = num;num = 0;numbit = 0;keystate = 0;}break;
 188   3          /*'='*/case 4:{
 189   4                      result[1] = num;
 190   4                      if(OPER == 1){result[2] = result[0] + result[1];}
 191   4                      else if(OPER == 2){result[2] = result[0] - result[1];}
 192   4                      else if(OPER == 3){result[2] = result[0] * result[1];}
 193   4                      else if(OPER == 4){result[2] = result[0] / result[1];}
 194   4                      OPER = 0;numbit = 4;keystate = 0;
 195   4                      num = result[2];
 196   4                      }break;
 197   3          }
 198   2        }
 199   1      #endif
 200   1        return num;
 201   1      }
 202          
 203          /*****************************************************************************************/
 204          
 205          #if 0
              void Delay(unsigned int x)
              {
                while(x--);
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1388    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     14    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
